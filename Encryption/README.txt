This is a simple encryption program for test compatibiliry of GPGME library with Qt C++, and will apply to be encryption part of E2EEIM Project.

This program access to GnuPG, before build some librarys are needed.

**REQUIREMENT**
Linux
  -Qt 5.10.1
  -GnuPG
  -gpgme library
MacOS
  -Qt 5.10.1
  -GPG Suite 2018.1
Windows
  -Qt 5.10.1 with minGW
  -Gpg4win

**BUILD INSTRUCRTION**
1. Make sure your include path and library path of GPGME library are the same as in 'Encryption.pro'. 
2. Run 'qmake'.
3. Run 'make' (for windows run mingw32-make).

NOTE: 
1. The program require Makefile at runtime, Makefile and execute file need to be in the same directory.
2. The program use user keyring.
3. At runtime, the program generated 5 files as follow
E2EEIM_Public_Key.key
Makefile.SymEncrypted
Makefile.SymDncrypted
Makefile.AsymEncrypted
Makefile.AsymDncrypted

You can delete it all by 'make distclean'
(If 'Makefile' generated by 'qmake')

The program access to GnuPG operation as follow
1. List private key
2. List Public key
3. Generate a key (signer)
4. Export public key
5. Import public key
6. Generate a key (recipient)
7. Symmetric Encryption
8. Symmetric Decryption
9. Asymmetric Encryption
10. Asymmetric Decryption
11. Delete Keys


When you run you will get output just like as follow
$ ./Encryption
Create the GPGME Context SUCCESS
1---------Listing Private Keys----------1
Key ID: 4CC9AA7800E32569
Name: Ramin Djawadi
E-Mail: ramind@protonmail.com

Key ID: 31738A4833573C32
Name: Kevin R. Mauck
E-Mail: KevinRM@protonmail.com


---------FOUND  2  Private Keys----------

2---------Listing Public Keys-----------2
Key ID: 4CC9AA7800E32569
Name: Ramin Djawadi
E-Mail: ramind@protonmail.com

Key ID: 31738A4833573C32
Name: Kevin R. Mauck
E-Mail: KevinRM@protonmail.com

Key ID: 33325D6BCF2818D2
Name: George K. Fuson
E-Mail: Georgedf@protonmail.com

Key ID: 249B39D24F25E3B6
Name: Werner Koch
E-Mail:

Key ID: 2071B08A33BD3F06
Name: NIIBE Yutaka
E-Mail: gniibe@fsij.org

Key ID: 04376F3EE0856959
Name: David Shaw
E-Mail:

Key ID: BCEF7E294B092E28
Name: Andre Heinecke
E-Mail:

Key ID: 76D78F0500D026C4
Name: GPGTools Team
E-Mail: team@gpgtools.org


---------FOUND  8  Public Keys----------

3---------A New Key Generation----------3
generating...
--------Finished Key Generation----------
Key ID: C9256F586C46C31D
Name: E2 Eeim
E-Mail: e2eeim@e2eeim.crypto

4----------Export Public Keys-----------4
Key ID: C9256F586C46C31D
Name: E2 Eeim
E-Mail: e2eeim@e2eeim.crypto

'E2EEIM_Public_Key.key' Saved in current directory


5----------Import Public Keys-----------5
Import key from E2EEIM_Public_Key.key
considered:  1
imported:  0
secret_imported:  0
new_signatures:  0
new_revocation:  0
new_sub_keys:  0
unchanged:  1
imported_rsa:  0



6---------A New Key Generation----------6
generating...
--------Finished Key Generation----------
Key ID: 6CF2B9BD37E97DBF
Name: Recv Eeim
E-Mail: recv@e2eeim.crypto

7---------Symmetric Encryption----------7
Encrypt  Makefile and placing the result into  Makefile.SymEncrypted

Finished encryption, output saved into Makefile.SymEncrypted

8-------- Symmetric Decryption-----------8
Finished decryption, output saved into Makefile.SymDecrypted

9--------Asymmetric Encryption-----------9
Finished encryption, output saved into Makefile.AsymEncrypted

10--------Asymmetric Decryption----------10
Finished decryption, output saved into Makefile.AsymDecrypted

11--------------Delete Keys--------------11
Key ID: C9256F586C46C31D
Name: E2 Eeim
E-Mail: e2eeim@e2eeim.crypto

Key ID: 6CF2B9BD37E97DBF
Name: Recv Eeim
E-Mail: recv@e2eeim.crypto



ALL DONE


At runtime, the program generated 5 files as follow
E2EEIM_Public_Key.key
Makefile.SymEncrypted
Makefile.SymDncrypted
Makefile.AsymEncrypted
Makefile.AsymDncrypted

You can delete it all by 'make distclean'
(If 'Makefile' generated by 'qmake')
